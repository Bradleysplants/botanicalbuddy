# Generated by Django 5.1.4 on 2024-12-16 19:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trefle_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('common_name', models.CharField(blank=True, max_length=255, null=True)),
                ('scientific_name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('family_common_name', models.CharField(blank=True, max_length=255, null=True)),
                ('family', models.CharField(blank=True, max_length=255, null=True)),
                ('genus', models.CharField(blank=True, max_length=255, null=True)),
                ('growth_habit', models.CharField(blank=True, max_length=255, null=True)),
                ('maximum_height', models.FloatField(blank=True, null=True)),
                ('flower_color', models.CharField(blank=True, max_length=255, null=True)),
                ('native_to', models.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('care_instructions', models.TextField(blank=True, null=True)),
                ('soil_type', models.CharField(blank=True, max_length=255, null=True)),
                ('water_requirements', models.CharField(blank=True, max_length=255, null=True)),
                ('sunlight_requirements', models.CharField(blank=True, max_length=255, null=True)),
                ('vector_data', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='plant_images/')),
                ('common_diseases', models.JSONField(blank=True, null=True)),
                ('common_pests', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QAEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_vector', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('answer_text', models.TextField()),
                ('answer_vector', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qa_entries', to='backend.plantdata')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\d{10}$', message='Phone number must be 10 digits.')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_pics/')),
                ('bio', models.TextField(blank=True)),
                ('gardening_experience', models.CharField(blank=True, max_length=50)),
                ('preferred_light_conditions', models.CharField(blank=True, max_length=255)),
                ('notification_preferences', models.JSONField(blank=True, null=True)),
                ('favorite_plants', models.ManyToManyField(blank=True, to='backend.plantdata')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='backend_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='backend_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VectorDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vector_data', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user')),
            ],
        ),
    ]
